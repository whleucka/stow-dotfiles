#!/usr/bin/env zsh
fg() {
    if [[ $# -eq 1 && $1 = - ]]; then
        builtin fg %-;
    elif [[ "$*" =~ ^[0-9]+$ ]]; then
        builtin fg %"$*";
    else
        builtin fg "$@";
    fi
}

tsm() {
    if [[ $# -eq 2 && ($1 = "add" || $1 = "-a") ]]; then
        transmission-remote -a $2
    elif [[ $# -eq 2 && ($1 = "remove" || $1 = "-r") ]]; then
        transmission-remote -t $2 -r
    elif [[ $# -eq 1 && ($1 = "list" || $1 = "-l") ]]; then
        transmission-remote -l
    elif [[ $# -eq 1 && ($1 = "follow" || $1 = "-f") ]]; then
        watch "transmission-remote -l"
    fi
}

what() {
    curl cheat.sh/$1;
}

stow-update() {
    current=$(pwd)

    printf "One moment...\n\n"
    sleep 1

    printf "Fetching nightly build of neovim if necessary\n"
    mkdir -p ~/.neovim
    cd ~/.neovim

    # Check if the file exists and is older than 1 day
    if [ ! -f "nvim-linux64.tar.gz" ] || [ "$(find nvim-linux64.tar.gz -mtime +0)" ]; then
        printf "Downloading new nightly build of neovim\n"
        rm -rf nvim-linux64
        rm -rf nvim-linux64.tar.gz
        wget https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz
        tar -xvzf nvim-linux64.tar.gz
    else
        printf "Nightly build of neovim is up-to-date\n"
    fi

    stow_dir=$HOME/stow-dotfiles
    stow_dir_hidden=$HOME/.stow-dotfiles

    printf "Pulling stow-dotfiles...\n\n"
    if [ -d "$stow_dir" ]; then
        cd $stow_dir
        git checkout ~/stow-dotfiles/nvim/.config/nvim/lazy-lock.json
    elif [ -d "$stow_dir_hidden" ]; then
        cd $stow_dir_hidden
        git checkout ~/.stow-dotfiles/nvim/.config/nvim/lazy-lock.json
    fi

    pull_output=$(git pull -v)
    printf "%s\n" "$pull_output"

    if [[ "$pull_output" != *"Already up to date."* ]]; then
        printf "\n\nUpdating neovim...\n\n"
        nvim --headless "+Lazy! update" +UpdateRemotePlugins +TSUpdate +qa
        printf "\n\nUpdate complete!\n"
    else
        printf "\n\nAll good, no updates are necessary!\n"
    fi

    cd $current
}
