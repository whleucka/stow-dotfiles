#!/usr/bin/env zsh
fg() { 
    if [[ $# -eq 1 && $1 = - ]]; then
        builtin fg %-;
    elif [[ "$*" =~ ^[0-9]+$ ]]; then
        builtin fg %"$*";
    else
        builtin fg "$@";
    fi
}

# Custom search using fd
f() {
    if ! command -v fd > /dev/null; then
        printf "f alias: fd must be installed\n"
        return 0
    fi
    if command -v tree > /dev/null; then
        preview_cmd="tree -C {}"
    else
        preview_cmd="ls -ls"
    fi
    # Store the STDOUT of fzf in a variable
    selection=$(fd --type=directory | fzf --multi --height=80% --border=sharp \
        --preview=$preview_cmd --preview-window='45%,border-sharp' \
        --prompt='Dirs > ' \
        --bind='del:execute(rm -ri {+})' \
        --bind='ctrl-p:toggle-preview' \
        --bind='ctrl-d:change-prompt(Dirs > )' \
        --bind='ctrl-d:+reload(fd --type=directory)' \
        --bind='ctrl-d:+change-preview(tree -C {})' \
        --bind='ctrl-d:+refresh-preview' \
        --bind='ctrl-f:change-prompt(Files > )' \
        --bind='ctrl-f:+reload(fd --type=file)' \
        --bind='ctrl-f:+change-preview(cat {})' \
        --bind='ctrl-f:+refresh-preview' \
        --bind='ctrl-a:select-all' \
        --bind='ctrl-x:deselect-all' \
        --header '
            CTRL-D to display directories | CTRL-F to display files
            CTRL-A to select all | CTRL-x to deselect all
            ENTER to edit | DEL to delete
            CTRL-P to toggle preview
            '
        )

    # Determine what to do depending on the selection
    if [ -d "$selection" ]; then
        cd "$selection" || exit
    else
        eval "$EDITOR $selection"
    fi
}

batdiff() {
    git diff --name-only --relative --diff-filter=d | xargs bat --diff;
}

what() {
    curl cheat.sh/$1;
}

nvim-update() {
    current=$(pwd)
    neovim_dir=$HOME/.neovim-config/astro/
    user_dir=$HOME/.neovim-config/astro/.config/nvim/lua/user/

    cd $neovim_dir;
    git pull -v;

    cd $user_dir;
    git pull -v;

    cd $current;

    nvim +AstroUpdate +qa

    printf "Done!\n"
}

music() {
    music_list=/tmp/music-list

    if [ ! -f "$music_list" ]; then
        printf "Fetching music list...\n"
        ssh fsociety -- "find /mnt/data/Music -type f \( -name \"*.mp3\" -o -name \"*.flac\" -o -name \"*.ogg\" -o -name \"*.wav\" -o -name \"*.m4a\" \)" > "$music_list"
        printf "Done...\n"
    fi;

    selected=$(cat "$music_list" | fzf)

    if [ ! -z "$selected" ]; then
        mpv "sftp://fsociety:$selected"
    else:
        printf "See you next time!"
    fi;
    
}
